---
# linuxcis_notauto will auto install intrusive items
linuxcis_notauto: false

# Disable/Enable whole sections (Default is for all)
linuxcis_section1: true
linuxcis_section2: true
linuxcis_section3: true
linuxcis_section4: true
linuxcis_section5: true
linuxcis_section6: true

system_is_container: false
container_vars_file: is_container.yml

# Disable all level 2 CIS rules
# Set to false to skip all level2 modifications
linuxcis_level2: true

# Disable/Enable OS check
linuxcis_os_check: true

# Whether to skip the reboot
linuxcis_skip_reboot: true
## Python Binary
## This is used for python3 Installations where python2 OS modules are used in ansible
python2_bin: /bin/python2.7


## Benchmark name used by audting control role
# The audit variable found at the base
benchmark: RHEL7-CIS

#### Basic external goss audit enablement settings ####
#### Precise details - per setting can be found at the bottom of this file ####

### Goss is required on the remote host
setup_audit: false
# How to retrive goss
# Options are copy or download - detailed settings at the bottom of this file
# you will need to access to either github or the file already dowmloaded
get_goss_file: download

# how to get audit files onto host options
# options are git/copy/get_url
audit_content: git

# Timeout for those cmds that take longer to run where timeout set
audit_cmd_timeout: 30000

# enable audits to run - this  runs the audit and get the latest content
run_audit: false

### End Goss enablements ####
#### Detailed settings found at the end of this document ####


# Enable/Disable SELinux
linuxcis_selinux_disable: false
# Only for CIS for Red Hat 7
# For 8+, this is expected to always be enforcing
linuxcis_selinux_state: enforcing

# Misc. environment variables
linuxcis_skip_for_travis: false
linuxcis_system_is_container: false
system_is_ec2: false

# Change to false if using EFI boot changes 1.1.1.4 to stop vfat
linuxcis_legacy_boot: true

# These variables correspond with the CIS rule IDs or paragraph numbers defined in
# the CIS benchmark documents.
# PLEASE NOTE: These work in coordination with the section # group variables and tags.
# You must enable an entire section in order for the variables below to take effect.
disabled_cis_rules: []
disabled_cis_sections: []

# Service configuration booleans set true to keep service
linuxcis_avahi_server: false
linuxcis_cups_server: false
linuxcis_dhcp_server: false
linuxcis_ldap_server: false
linuxcis_telnet_server: false
linuxcis_nfs_server: false
linuxcis_rpc_server: false
linuxcis_ntalk_server: false
linuxcis_rsyncd_server: false
linuxcis_tftp_server: false
linuxcis_rsh_server: false
linuxcis_nis_server: false
linuxcis_snmp_server: false
linuxcis_squid_server: false
linuxcis_smb_server: false
linuxcis_dovecot_server: false
linuxcis_httpd_server: false
linuxcis_vsftpd_server: false
linuxcis_named_server: false
linuxcis_nfs_rpc_server: false
linuxcis_is_mail_server: false
linuxcis_bind: false
linuxcis_vsftpd: false
linuxcis_httpd: false
linuxcis_dovecot: false
linuxcis_samba: false
linuxcis_squid: false
linuxcis_net_snmp: false
linuxcis_allow_autofs: false

## Section 1 vars

# 1.1.2
# These settings go into the /etc/fstab file for the /tmp mount settings
# The value must contain nosuid,nodev,noexec to conform to CIS standards
# linuxcis_tmp_tmpfs_settings: "defaults,rw,nosuid,nodev,noexec,relatime 0 0"
# If set true uses the tmp.mount service else using fstab configuration
linuxcis_tmp_svc: false

# 1.2.1
# This is the login information for your RedHat Subscription
# DO NOT USE PLAIN TEXT PASSWORDS!!!!!
# The intent here is to use a password utility like Ansible Vault here
rhel8cis_rh_sub_user: user
rhel8cis_rh_sub_password: password

# 1.3.3 var log location variable
linuxcis_varlog_location: "/var/log/sudo.log"

# xinetd required
linuxcis_xinetd_required: false

# RedHat Satellite Subscription items
linuxcis_rhnsd_required: false

# 1.4.2 Bootloader password
linuxcis_set_boot_pass: false
linuxcis_bootloader_password_hash: 'grub.pbkdf2.sha512.changethispart'
linuxcis_bootloader_password: random

# System network parameters (host only OR host and router)
linuxcis_is_router: false

# IPv6 required
linuxcis_ipv6_required: true

# AIDE
linuxcis_config_aide: true
# AIDE cron settings
linuxcis_aide_cron:
    cron_user: root
    cron_file: /etc/cron.d/aide.cron
    aide_job: '/usr/sbin/aide --check'
    aide_minute: 0
    aide_hour: 5
    aide_day: '*'
    aide_month: '*'
    aide_weekday: '*'

# SELinux policy
linuxcis_selinux_pol: targeted

# Whether or not to run tasks related to auditing/patching the desktop environment
linuxcis_gui: no

# 1.10/1.11 Set crypto policy (LEGACY, DEFAULT, FUTURE, FIPS)
# Control 1.10 sates not ot use LEGACY and control 1.11 says to use FUTURE or FIPS.
linuxcis_crypto_policy: "FUTURE"

# Set to 'true' if X Windows is needed in your environment
linuxcis_xwindows_required: no

linuxcis_openldap_clients_required: false
linuxcis_telnet_required: false
linuxcis_talk_required: false
linuxcis_rsh_required: false
linuxcis_ypbind_required: false

# Time Synchronization - Either chrony or ntp
linuxcis_time_synchronization: chrony

linuxcis_time_synchronization_servers:
    - 0.pool.ntp.org
    - 1.pool.ntp.org
    - 2.pool.ntp.org
    - 3.pool.ntp.org

linuxcis_chrony_server_options: "minpoll 8"
linuxcis_ntp_server_options: "iburst"

# Section 3 Control Variables
# Control 3.1.2
# ubtu20cis_install_network_manager determines if this role can install network manager on Ubuntu Deployents
ubuntucis_install_network_manager: true

# 3.4.2 | PATCH | Ensure /etc/hosts.allow is configured
linuxcis_host_allow:
    - "10.0.0.0/255.0.0.0"
    - "172.16.0.0/255.240.0.0"
    - "192.168.0.0/255.255.0.0"

# Firewall Service for RedHat - either firewalld, nftables or iptables
redhatcis_firewall: firewalld
# Firewall Service for Ubuntu - either ufw, nftables or iptables
ubuntucis_firewall: iptables
linuxcis_default_zone: public

linuxcis_firewall_services:
    - ssh
    - dhcpv6-client

# 3.5.2.x
# NFT firewall
# not tested but added example for clarity - This will break connections
# If the tables dont exist automatically create the tablename below
linuxcis_nft_tables_autoNewTable: false
# create chain if doesnt exist
linuxcis_nft_tables_autoChainCreate: false
# create a table called
linuxcis_nft_tables_tableName: filter


# Warning Banner Content (issue, issue.net, motd)
linuxcis_warning_banner: |
    Authorized uses only. All activity may be monitored and reported.
# End Banner

## Section4 vars

# auditd settings
linuxcis_auditd:
    space_left_action: email
    action_mail_acct: root
    admin_space_left_action: halt
    max_log_file_action: keep_logs

linuxcis_logrotate: "daily"

# RHEL-07-4.1.2.4
# linuxcis_audit_backlog_limit value needs to be 8192 or larger to conform to CIS standards
linuxcis_audit_backlog_limit: 8192

# The max_log_file parameter should be based on your sites policy
linuxcis_max_log_file_size: 10

# RHEL-07-4.2.1.4/4.2.1.5 remote and destation log server name
linuxcis_remote_log_server: logagg.example.com

# RHEL-07-4.2.1.5
linuxcis_system_is_log_server: false

## Section5 vars

# SSH variables
linuxcis_ssh_loglevel: INFO
linuxcis_ssh_maxsessions: 4
linuxcis_inactivelock:
    lock_days: 30
linuxcis_sshd:
    clientalivecountmax: 3
    clientaliveinterval: 300
    ciphers: "chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr"
    macs: "hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256"
    kex: "curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256"
    logingracetime: 60
    # WARNING: make sure you understand the precedence when working with these values!!
    # allowusers:
    # allowgroups: systems dba
    # denyusers:
    # denygroups:

# pam variables
linuxcis_pam_faillock:
    attempts: 5
    interval: 900
    unlock_time: 900
    fail_for_root: no
    remember: 5
    pwhash: sha512

# 5.3.1/5.3.2 Custom authselect profile settings. Settings in place now will fail, they are place holders from the control example
# Due to the way many multiple options and ways to configure this control needs to be enabled and settings adjusted to minimise risk
linuxcis_use_authconfig: false
linuxcis_authselect:
    custom_profile_name: custom-profile
    default_file_to_copy: "sssd --symlink-meta"
    options: with-sudo with-faillock without-nullok

# 5.3.1 Enable automation to create custom profile settings, using the settings above
linuxcis_authselect_custom_profile_create: false

# 5.3.2 Enable automation to select custom profile options, using the settings above
linuxcis_authselect_custom_profile_select: false

# Accounts listed below will not have INACTIVE field set in shadow file
linuxcis_inactive_whitelist:
    - root
    - vagrant

linuxcis_pass:
    max_days: 90
    min_days: 7
    warn_age: 7
# Syslog system - either rsyslog or syslog-ng
linuxcis_syslog: rsyslog
linuxcis_rsyslog_ansiblemanaged: true

# Var/tmp settings
linuxcis_vartmp:
    source: /tmp
    fstype: none
    opts: "defaults,nodev,nosuid,noexec,bind"
    enabled: no

## PAM
linuxcis_pam_password:
    minlen: "14"
    minclass: "4"

# UID settings for interactive users
# These are discovered via logins.def is set true
discover_int_uid: false
min_int_uid: 1000
max_int_uid: 65533

# RHEL-07-5.4.5
# Session timeout setting file (TMOUT setting can be set in multiple files)
# Timeout value is in seconds. (60 seconds * 10 = 600)
linuxcis_shell_session_timeout:
    file: /etc/profile.d/tmout.sh
    timeout: 600
# RHEL-07-5.4.1.5 Allow ansible to expire password for account with a last changed date in the future. False will just display users in violation, true will expire those users passwords
linuxcis_futurepwchgdate_autofix: true

# 5.6 Group to be used for su
# this group needs to exists groups will not be created for remediation this is considered sys admins

# linuxcis_sugroup: sugroup

# wheel users list
linuxcis_sugroup_users: "root"

## Section6 vars

# RHEL-07_6.1.1
linuxcis_rpm_audit_file: /var/tmp/rpm_file_check

# RHEL-07_6.1.10 Allow ansible to adjust world-writable files. False will just display world-writable files, True will remove world-writable
linuxcis_no_world_write_adjust: true
linuxcis_passwd_label: "{{ (this_item | default(item)).id }}: {{ (this_item | default(item)).dir }}"
linuxcis_dotperm_ansiblemanaged: true

# RHEL-07-6.2.18 Clear users from shadow group
linuxcis_remove_shadow_grp_usrs: true
#### Goss Configuration Settings ####

### Goss binary settings ###
goss_version:
    release: v0.3.16
    checksum: 'sha256:827e354b48f93bce933f5efcd1f00dc82569c42a179cf2d384b040d8a80bfbfb'
audit_bin_path: /usr/local/bin/
audit_bin: "{{ audit_bin_path }}goss"
audit_format: json

# if get_goss_file == download change accordingly
goss_url: "https://github.com/aelsabbahy/goss/releases/download/{{ goss_version.release }}/goss-linux-amd64"

## if get_goss_file - copy the following needs to be updated for your environment
## it is expected that it will be copied from somewhere accessible to the control node
## e.g copy from ansible control node to remote host
copy_goss_from_path: /some/accessible/path

### Goss Audit Benchmark file ###
## managed by the control audit_content
# git
audit_file_git: "https://github.com/db0/{{ benchmark }}-Audit.git"
audit_git_version: main

# copy:
audit_local_copy: "some path to copy from"

# get_url:
audit_files_url: "some url maybe s3?"

# Where the goss audit configuration will be stored
audit_files: "/var/tmp/{{ benchmark }}-Audit/"

## Goss configuration information
# Where the goss configs and outputs are stored
audit_out_dir: '/var/tmp'
audit_conf_dir: "{{ audit_out_dir }}/{{ benchmark }}-Audit/"
pre_audit_outfile: "{{ audit_out_dir }}/{{ ansible_hostname }}_pre_scan_{{ ansible_date_time.epoch }}.{{ audit_format }}"
post_audit_outfile: "{{ audit_out_dir }}/{{ ansible_hostname }}_post_scan_{{ ansible_date_time.epoch }}.{{ audit_format }}"

## The following should not need changing
goss_file: "{{ audit_conf_dir }}goss.yml"
audit_vars_path: "{{ audit_conf_dir  }}/vars/{{ ansible_hostname }}.yml"
audit_results: |
      The pre remediation results are: {{ pre_audit_summary }}.
      The post remediation results are: {{ post_audit_summary }}.
      Full breakdown can be found in {{ audit_out_dir }}
