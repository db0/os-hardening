---

- name: "{{ SEC_ID_ENSURE_SELINUX_INSTALLED }} | L1 | PATCH | Ensure SELinux is installed"
  package:
      name: libselinux
      state: present
  when:
      - not linuxcis_selinux_disable
      - SEC_ID_ENSURE_SELINUX_INSTALLED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_1.6.1.1
#   vars:
#       ansible_python_interpreter: /bin/python

- name: "{{ SEC_ID_ENSURE_SELINUX_NOT_DISABLED_IN_BOOTLOADER }} | L1 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
  register: selinux_grub_patch
  ignore_errors: yes
  notify: grub2cfg
  when:
      - not linuxcis_selinux_disable
      - SEC_ID_ENSURE_SELINUX_NOT_DISABLED_IN_BOOTLOADER not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_1.6.1.2

- name: "{{ SEC_ID_ENSURE_SELINUX_POLICY_CONFIGURED }} | L1 | PATCH | Ensure SELinux policy is configured\n
         {{ SEC_ID_ENSURE_SELINUX_MODE_ENFORCING_OR_PERMISSIVE }} | L1 | PATCH | Ensure the SELinux state is enforcing or permissive"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ linuxcis_selinux_pol }}"
      state: "{{ linuxcis_selinux_state }}"
  when:
      - not linuxcis_selinux_disable
      - SEC_ID_ENSURE_SELINUX_POLICY_CONFIGURED not in disabled_cis_rules
      - SEC_ID_ENSURE_SELINUX_MODE_ENFORCING_OR_PERMISSIVE not in disabled_cis_rules
  tags:
      - level1
      - selinux
      - patch
      - rule_1.6.1.3
      - rule_1.6.1.4

- name: "{{ SEC_ID_ENSURE_SELINUX_MODE_ENFORCING }} | L2 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ linuxcis_selinux_pol }}"
      state: enforcing
  when:
      - not linuxcis_selinux_disable
      - not linuxcis_selinux_state == "permissive"
      - SEC_ID_ENSURE_SELINUX_MODE_ENFORCING not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level2
      - selinux
      - patch
      - rule_1.6.1.5

- name: "{{ SEC_ID_ENSURE_NO_UNCONFINED_SERVICES_EXIST }} | L1 | AUDIT | Ensure no unconfined daemons exist"
  block:
      - name: "{{ SEC_ID_ENSURE_NO_UNCONFINED_SERVICES_EXIST }} | L1 | AUDIT | Ensure no unconfined daemons exist | Find the unconfined daemons"
        shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
        register: rhelcis_1_6_1_6_unconf_daemons
        failed_when: false
        changed_when: false

      - name: "{{ SEC_ID_ENSURE_NO_UNCONFINED_SERVICES_EXIST }} | L1 | AUDIT | Ensure no unconfined daemons exist | Message on no unconfined daemones"
        debug:
            msg: "Good News! There are no unconfined daemons found on your system"
        when: rhelcis_1_6_1_6_unconf_daemons.stdout | length == 0

      - name: "{{ SEC_ID_ENSURE_NO_UNCONFINED_SERVICES_EXIST }} | L1 | AUDIT | Ensure no unconfined daemons exist | Message on unconfined daemones"
        debug:
            msg: "Warning! You have unconfined daemons: {{ rhelcis_1_6_1_6_unconf_daemons.stdout_lines }}"
        when: rhelcis_1_6_1_6_unconf_daemons.stdout | length > 0
  when:
      - SEC_ID_ENSURE_NO_UNCONFINED_SERVICES_EXIST not in disabled_cis_rules
  tags:
      - level1
      - audit
      - rule_1.6.1.6

- name: "{{ SEC_ID_ENSURE_SETROUBLESHOOT_NOT_INSTALLED }} | L1 | PATCH | Ensure SETroubleshoot is not installed"
  package:
      name: setroubleshoot
      state: absent
  when:
      - SEC_ID_ENSURE_SETROUBLESHOOT_NOT_INSTALLED not in disabled_cis_rules
  tags:
      - level1
      - selinux
      - patch
      - rule_1.6.1.7
#   vars:
#       ansible_python_interpreter: /bin/python

- name: "{{ SEC_ID_ENSURE_MCSTRANS_NOT_INSTALLED }} | L1 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  package:
      name: mcstrans
      state: absent
  when:
      - SEC_ID_ENSURE_MCSTRANS_NOT_INSTALLED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_1.6.1.8
#   vars:
#       ansible_python_interpreter: /bin/python
