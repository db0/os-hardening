---

- name: "SECTION | {{ SEC_ID_DISABLE_UNUSED_FILESYSTEMS }} | Disable Unused Filesystems"
  include_tasks: "{{ lookup('first_found', dist_tasks) }}"
  vars:
    dist_tasks:
      - "disable_unused_filesystems_{{ ansible_facts.distribution }}-{{ ansible_facts.distribution_major_version }}.yml"
      - "disable_unused_filesystems_{{ ansible_facts.os_family }}-{{ ansible_facts.distribution_major_version }}.yml"
      - "disable_unused_filesystems_{{ ansible_facts.distribution }}.yml"
      - "disable_unused_filesystems_{{ ansible_facts.os_family }}.yml"

- name: |
        "SCORED | {{ SEC_ID_CONFIGURE_TMP }} | PATCH | Ensure /tmp is configured"
        "SCORED | {{ SEC_ID_CONFIGURE_TMP_NODEV }} | PATCH | Ensure nodev option set on /tmp partition"
        "SCORED | {{ SEC_ID_CONFIGURE_TMP_NOSUID }} | PATCH | Ensure nosuid option set on /tmp partition"
        "SCORED | {{ SEC_ID_CONFIGURE_TMP_NOEXEC }} | PATCH | Ensure noexec option set on /tmp partition"
        "via fstab"
  mount:
      name: /tmp
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if SEC_ID_CONFIGURE_TMP_NOEXEC not in disabled_cis_rules %}noexec,{% endif %}{% if SEC_ID_CONFIGURE_TMP_NODEV not in disabled_cis_rules %}nodev,{% endif %}{% if SEC_ID_CONFIGURE_TMP_NOSUID not in disabled_cis_rules %}nosuid{% endif %}
  notify: remount tmp
  loop: "{{ ansible_mounts }}"
  when:
      - item.mount == "/tmp"
      - not linuxcis_tmp_svc
      - SEC_ID_CONFIGURE_TMP not in disabled_cis_rules or
        SEC_ID_CONFIGURE_TMP_NODEV not in disabled_cis_rules or
        SEC_ID_CONFIGURE_TMP_NOSUID not in disabled_cis_rules or
        SEC_ID_CONFIGURE_TMP_NOEXEC not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - mounts
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: |
        "SCORED | {{ SEC_ID_CONFIGURE_TMP }} | PATCH | Ensure /tmp is configured"
        "SCORED | {{ SEC_ID_CONFIGURE_TMP_NODEV }} | PATCH | Ensure nodev option set on /tmp partition"
        "SCORED | {{ SEC_ID_CONFIGURE_TMP_NOSUID }} | PATCH | Ensure nosuid option set on /tmp partition"
        "SCORED | {{ SEC_ID_CONFIGURE_TMP_NOEXEC }} | PATCH | Ensure noexec option set on /tmp partition"
        "via systemd"
  template:
      src: etc/systemd/system/tmp.mount.j2
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
  notify: systemd restart tmp.mount
  when:
      - linuxcis_tmp_svc
      - SEC_ID_CONFIGURE_TMP not in disabled_cis_rules or
        SEC_ID_CONFIGURE_TMP_NODEV not in disabled_cis_rules or
        SEC_ID_CONFIGURE_TMP_NOSUID not in disabled_cis_rules or
        SEC_ID_CONFIGURE_TMP_NOEXEC not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - mounts
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "{{ SEC_ID_CONFIGURE_SHM }} | L1 | AUDIT | Ensure /dev/shm is configured"
  block:
      - name: "{{ SEC_ID_CONFIGURE_SHM }} | L1 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "Warning! {{ required_mount }} doesn't exist. This is a manual task"
        register: dev_shm_mount_absent
        changed_when: dev_shm_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "{{ SEC_ID_CONFIGURE_SHM }} | L1 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: dev_shm_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/dev/shm'
  when:
      - SEC_ID_CONFIGURE_SHM not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - mounts
      - rule_1.1.6

- name: |
         "{{ SEC_ID_CONFIGURE_SHM_NODEV }} | L1 | PATCH | Ensure noexec option set on /dev/shm partition | skips if mount absent"
         "{{ SEC_ID_CONFIGURE_SHM_NOSUID }} | L1 | PATCH | Ensure nosuid option set on /dev/shm partition | skips if mount absent"
         "{{ SEC_ID_CONFIGURE_SHM_NOEXEC }} | L1 | PATCH | Ensure noexec option set on /dev/shm partition | skips if mount absent"
  mount:
      name: /dev/shm
      src: tmpfs
      fstype: tmpfs
      state: present
      opts: defaults,{% if SEC_ID_CONFIGURE_SHM_NOEXEC not in disabled_cis_rules %}noexec,{% endif %}{% if SEC_ID_CONFIGURE_SHM_NODEV not in disabled_cis_rules %}nodev,{% endif %}{% if SEC_ID_CONFIGURE_SHM_NOSUID not in disabled_cis_rules %}nosuid{% endif %},seclabel
  notify: remount dev_shm
  when:
      - SEC_ID_CONFIGURE_SHM_NODEV not in disabled_cis_rules
      - SEC_ID_CONFIGURE_SHM_NOSUID not in disabled_cis_rules
      - SEC_ID_CONFIGURE_SHM_NOEXEC not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - mounts
      - rule_1.1.7
      - rule_1.1.8
      - rule_1.1.9

- name: "{{ SEC_ID_SEPARATE_VAR }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | skips if mount absent"
  block:
      - name: "{{ SEC_ID_SEPARATE_VAR }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }}| Absent"
        debug:
            msg: "Warning! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_mount_absent
        changed_when: var_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "{{ SEC_ID_SEPARATE_VAR }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: var_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var'
  when:
      - SEC_ID_SEPARATE_VAR not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - mounts
      - rule_1.1.10

- name: "{{ SEC_ID_SEPARATE_VAR_TMP }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | skips if mount absent"
  block:
      - name: "{{ SEC_ID_SEPARATE_VAR_TMP }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "Warning! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_tmp_mount_absent
        changed_when: var_tmp_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "{{ SEC_ID_SEPARATE_VAR_TMP }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: var_tmp_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var/tmp'
  when:
      - SEC_ID_SEPARATE_VAR_TMP not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - mounts
      - rule_1.1.11

- name: |
          "{{ SEC_ID_CONFIGURE_VAR_TMP_NODEV }} | L1 | PATCH | Ensure noexec option set on /var/tmp partition | skips if mount absent"
          "{{ SEC_ID_CONFIGURE_VAR_TMP_NOSUID }} | L1 | PATCH | Ensure nodec option set on /var/tmp partition | skips if mount absent"
          "{{ SEC_ID_CONFIGURE_VAR_TMP_NOEXEC }} | L1 | PATCH | Ensure nosuid option set on /var/tmp partition | skips if mount absent"
  mount:
      name: /var/tmp
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if SEC_ID_CONFIGURE_VAR_TMP_NOEXEC not in disabled_cis_rules %}noexec,{% endif %}{% if SEC_ID_CONFIGURE_VAR_TMP_NODEV not in disabled_cis_rules %}nodev,{% endif %}{% if SEC_ID_CONFIGURE_VAR_TMP_NOSUID not in disabled_cis_rules %}nosuid{% endif %}
  loop: "{{ ansible_mounts }}"
  when:
      - var_tmp_mount_present is defined
      - item.mount == "/var/tmp"
      - SEC_ID_CONFIGURE_VAR_TMP_NODEV not in disabled_cis_rules
      - SEC_ID_CONFIGURE_VAR_TMP_NOSUID not in disabled_cis_rules
      - SEC_ID_CONFIGURE_VAR_TMP_NOEXEC not in disabled_cis_rules

  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - mounts
      - skip_ansible_lint

- name: "{{ SEC_ID_SEPARATE_VAR_LOG }} | L2 | AUDIT | Ensure separate partition exists for /var/log  | skips if mount absent"
  block:
      - name: "{{ SEC_ID_SEPARATE_VAR_LOG }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }}| Absent"
        debug:
            msg: "Warning! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_log_mount_absent
        changed_when: var_log_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "{{ SEC_ID_SEPARATE_VAR_LOG }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var/log'
  when:
      - SEC_ID_SEPARATE_VAR_LOG not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - mounts
      - rule_1.1.15
      - skip_ansible_lint

- name: "{{ SEC_ID_SEPARATE_VAR_LOG_AUDIT }} | L2 | AUDIT | Ensure separate partition exists for /var/log/audit | skips if mount absent"
  block:
      - name: "{{ SEC_ID_SEPARATE_VAR_LOG_AUDIT }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }}| Absent"
        debug:
            msg: "Warning! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_log_audit_mount_absent
        changed_when: var_log_audit_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "{{ SEC_ID_SEPARATE_VAR_LOG_AUDIT }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var/log/audit'
  when:
      - SEC_ID_SEPARATE_VAR_LOG_AUDIT not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - mounts
      - rule_1.1.16
      - skip_ansible_lint

- name: "{{ SEC_ID_SEPARATE_HOME }} | L2 | AUDIT | Ensure separate partition exists for /home"
  block:
      - name: "{{ SEC_ID_SEPARATE_HOME }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }}| Absent"
        debug:
            msg: "Warning! {{ required_mount }} doesn't exist. This is a manual task"
        register: home_mount_absent
        changed_when: home_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "{{ SEC_ID_SEPARATE_HOME }} | L2 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: home_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/home'
  when:
      - SEC_ID_SEPARATE_HOME not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level2-server
      - level2-workstation
      - scored
      - audit
      - mounts
      - rule_1.1.17
      - skip_ansible_lint

- name: "{{ SEC_ID_CONFIGURE_HOME_NODEV }} | L1 | PATCH | Ensure nodev option set on /home partition | skips if mount absent"
  mount:
      name: /home
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if SEC_ID_CONFIGURE_HOME_NODEV not in disabled_cis_rules %}nodev{% endif %}
  loop: "{{ ansible_mounts }}"
  when:
      - home_mount_present is defined
      - item.mount == "/home"
      - SEC_ID_CONFIGURE_HOME_NODEV not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - scored
      - patch
      - mounts
      - rule_1.1.18
      - skip_ansible_lint

- name: |
      "{{ SEC_ID_CONFIGURE_MEDIA_NODEV }} | L1 | PATCH | Ensure removable media partitions include noexec option"
      "{{ SEC_ID_CONFIGURE_MEDIA_NOSUID }} | L1 | PATCH | Ensure nodev option set on removable media partitions"
      "{{ SEC_ID_CONFIGURE_MEDIA_NOEXEC }} | L1 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: false
  when:
      - SEC_ID_CONFIGURE_MEDIA_NODEV not in disabled_cis_rules
      - SEC_ID_CONFIGURE_MEDIA_NOSUID not in disabled_cis_rules
      - SEC_ID_CONFIGURE_MEDIA_NOEXEC not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - notscored
      - audit
      - mounts
      - rule_1.1.19
      - rule_1.1.20
      - rule_1.1.21

- name: "{{ SEC_ID_WORLD_WRITABLE_STICKY_BIT }} | L1 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  args:
      warn: no
  changed_when: false
  failed_when: false
  when:
      - SEC_ID_WORLD_WRITABLE_STICKY_BIT not in disabled_cis_rules
  tags:
      - skip_ansible_lint
      - level1-server
      - level1-workstation
      - patch
      - stickybits
      - permissons
      - rule_1.1.22

- name: "{{ SEC_ID_DISABLE_AUTOMOUNT }} | L1 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: no
  when:
      - not linuxcis_allow_autofs
      - "'autofs' in ansible_facts.packages"
      - SEC_ID_DISABLE_AUTOMOUNT not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level1-server
      - level2-workstation
      - patch
      - mounts
      - automounting
      - rule_1.1.23

- name: "{{ SEC_ID_DISABLE_USB_STORAGE }} | L1 | PATCH | Disable USB Storage"
  block:
      - name: "{{ SEC_ID_DISABLE_USB_STORAGE }} | L1 | PATCH | Disable USB Storage | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install usb-storage(\\s|$)"
            line: "install usb-storage /bin/true"
            create: yes
            owner: root
            group: root
            mode: 0640

      - name: "{{ SEC_ID_DISABLE_USB_STORAGE }} | L1 | PATCH | Disable USB Storage | Edit modprobe config"
        modprobe:
            name: usb-storage
            state: absent
  when:
      - SEC_ID_DISABLE_USB_STORAGE not in disabled_cis_rules
      - linuxcis_level2
  tags:
      - level1-server
      - level2-workstation
      - patch
      - mounts
      - removable_storage
      - rule_1.1.24
