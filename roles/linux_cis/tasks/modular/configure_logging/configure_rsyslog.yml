---

- name: "{{ SEC_ID_ENSURE_RSYSLOG_INSTALLED }} | L1 | PATCH | Ensure rsyslog is installed"
  package:
      name: "{{ linuxcis_syslog }}"
      state: present
#   vars:
#       ansible_python_interpreter: /bin/python
  when:
      - SEC_ID_ENSURE_RSYSLOG_INSTALLED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_4.2.1.1

- name: "{{ SEC_ID_ENSURE_RSYSLOG_ENABLED }} | L1 | PATCH | Ensure rsyslog Service is enabled and running"
  service:
      name: rsyslog
      enabled: yes
      state: started
  when:
      - SEC_ID_ENSURE_RSYSLOG_ENABLED not in disabled_cis_rules
      - linuxcis_syslog == 'rsyslog'
  tags:
      - level1
      - patch
      - rsyslog
      - rule_4.2.1.2

- name: "{{ SEC_ID_ENSURE_DEFAULT_FILE_PERMS }} | L1 | PATCH | Ensure rsyslog default file permissions configured"
  lineinfile:
      dest: /etc/rsyslog.conf
      regexp: '^\$FileCreateMode'
      line: '$FileCreateMode 0640'
  notify: restart rsyslog
  when:
      - SEC_ID_ENSURE_DEFAULT_FILE_PERMS not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_4.2.1.3

- name: "{{ SEC_ID_ENSURE_LOGGING_CONFIGURED }} | L1 | PATCH | Ensure logging is configured"
  block:
      - name: "{{ SEC_ID_ENSURE_LOGGING_CONFIGURED }} | L1 | AUDIT | Ensure logging is configured | rsyslog current config message out"
        shell: cat /etc/rsyslog.conf
        become: yes
        changed_when: false
        failed_when: false
        register: rhel_07_4_2_1_4_audit

      - name: "{{ SEC_ID_ENSURE_LOGGING_CONFIGURED }} | L1 | PATCH | Ensure logging is configured | Debug out rsyslog settings"
        debug:
            msg:
                - "These are the current logging configurations for rsyslog, please review:"
                - "{{ rhel_07_4_2_1_4_audit.stdout_lines }}"
        when:
            - not linuxcis_rsyslog_ansiblemanaged

      - name: "{{ SEC_ID_ENSURE_LOGGING_CONFIGURED }} | L1 | PATCH | Ensure logging is configured | Set logging settings lineinfile"
        lineinfile:
            path: /etc/rsyslog.conf
            state: present
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '^[# ]*{{ item.insertafter }}\s*=\s*'
        with_items:
            - { regexp: '^\*\.emerg(.*)$', line: '*.emerg                                                 :omusrmsg:*', insertafter: '# Everybody gets emergency messages' }
            - { regexp: '^authpriv(.*)$', line: 'auth,authpriv.*                                              /var/log/secure', insertafter: '# # The authpriv file has restricted access.' }
            - { regexp: '^mail\.\*(.*)$', line: 'mail.*                                                  -/var/log/mail', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^mail.info(.*)$', line: 'mail.info                                               -/var/log/mail.info', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^mail.warning(.*)$', line: 'mail.warning                                            -/var/log/mail.warning', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^mail.err(.*)$', line: 'mail.err                                                /var/log/mail.err', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^news.crit(.*)$', line: 'news.crit                                               -/var/log/news/news.crit', insertafter: '# Save news errors of level crit and higher in a special file.' }
            - { regexp: '^news.err(.*)$', line: 'news.err                                             -/var/log/news/news.err', insertafter: '# Save news errors of level crit and higher in a special file.' }
            - { regexp: '^news.notice(.*)$', line: 'news.notice                                             -/var/log/news/news.notice', insertafter: '# Save news errors of level crit and higher in a special file.' }
        notify: restart rsyslog
        when:
            - linuxcis_rsyslog_ansiblemanaged

      - name: "{{ SEC_ID_ENSURE_LOGGING_CONFIGURED }} | L1 | PATCH | Ensure logging is configured | Misc. log setting"
        blockinfile:
            path: /etc/rsyslog.conf
            state: present
            marker: "# {mark} MISC. LOG SETTINGS (ANSIBLE MANAGED)"
            block: |
              # misc. logging additions to meet CIS standards
              *.=warning;*.=err                                        -/var/log/warn
              *.crit                                                   /var/log/warn
              *.*;mail.none;news.none                                  /var/log/messages
            insertafter: '#### RULES ####'
        notify: restart rsyslog
        when:
            - linuxcis_rsyslog_ansiblemanaged

      - name: "{{ SEC_ID_ENSURE_LOGGING_CONFIGURED }} | L1 | PATCH | Ensure logging is configured | Local log settings"
        blockinfile:
            path: /etc/rsyslog.conf
            state: present
            marker: "#{mark} LOCAL LOG SETTINGS (ANSIBLE MANAGED)"
            block: |
              # local log settings
              local0,local1.*                                          -/var/log/localmessages
              local2,local3.*                                          -/var/log/localmessages
              local4,local5.*                                          -/var/log/localmessages
              local6,local7.*                                          -/var/log/localmessages
            insertafter: '#### RULES ####'
        notify: restart rsyslog
  when:
      - SEC_ID_ENSURE_LOGGING_CONFIGURED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rsyslog
      - rule_4.2.1.4

- name: "{{ SEC_ID_ENSURE_RSYSLOG_REMOTE_LOGGING }} | L1 | PATCH | Ensure rsyslog is configured to send logs to a remote log host"
  blockinfile:
      path: /etc/rsyslog.conf
      state: present
      block: |
        # remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
        *.* @@{{ linuxcis_remote_log_server }}
      insertafter: EOF
  notify: restart rsyslog
  register: result
  failed_when:
      - result is failed
      - result.rc != 257
  when:
      - SEC_ID_ENSURE_RSYSLOG_REMOTE_LOGGING not in disabled_cis_rules
      - linuxcis_remote_log_server is defined
  tags:
      - level1
      - patch
      - rule_4.2.1.5
      - rsyslog

- name: "{{ SEC_ID_ENSURE_RSYSLOG_ONLY_REMOTE_ACCEPTED }} | L1 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts."
  block:
      - name: "{{ SEC_ID_ENSURE_RSYSLOG_ONLY_REMOTE_ACCEPTED }} | L1 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts. | When not log host"
        replace:
            path: /etc/rsyslog.conf
            regexp: '({{ item }})'
            replace: '#\1'
        with_items:
            - '^(\$ModLoad imtcp)'
            - '^(\$InputTCPServerRun)'
        notify: restart rsyslog
        when:
            - not linuxcis_system_is_log_server

      - name: "{{ SEC_ID_ENSURE_RSYSLOG_ONLY_REMOTE_ACCEPTED }} | L1 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts. | When log host"
        replace:
            path: /etc/rsyslog.conf
            regexp: '^#(.*{{ item }}.*)'
            replace: '\1'
        with_items:
            - 'ModLoad imtcp'
            - 'InputTCPServerRun'
        notify: restart rsyslog
        when:
            - linuxcis_system_is_log_server
  when:
      - SEC_ID_ENSURE_RSYSLOG_ONLY_REMOTE_ACCEPTED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_4.2.1.6
      - rsyslog
