---

- name: "SECTION | {{ SEC_ID_ENSURE_UFW_INSTALLED }} | Ensure nftables is installed"
  include_tasks: ensure_firewall_package_installed_Debian.yml
  vars:
    cis_section: "{{ SEC_ID_ENSURE_UFW_INSTALLED }}"
    cis_section_description: "Ensure UncomplicatedFireWall is installed"
  when:
  - SEC_ID_ENSURE_UFW_INSTALLED not in disabled_cis_rules
  tags:
  - level1-server
  - level1-workstation
  - patch
  - rule_3.5.1.1

- name: "{{ SEC_ID_ENSURE_IPTABLES_NOT_ENABLED_WITH_UFW }} | L1 | PATCH | Ensure iptables-persistent is not installed with ufw"
  apt:
      name: iptables-persistent
      state: absent
  when:
      - SEC_ID_ENSURE_IPTABLES_NOT_ENABLED_WITH_UFW not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.2
      - ufw

# Adding the allow OpenSSH rule while enabling ufw to allow ansible to run after enabling
- name: "{{ SEC_ID_ENSURE_UFW_SERVICE_ENABLED }} | L1 | PATCH | Ensure ufw service is enabled"
  ufw:
      rule: allow
      name: OpenSSH
      state: enabled
  when:
      - SEC_ID_ENSURE_UFW_SERVICE_ENABLED not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.3
      - ufw

- name: "{{ SEC_ID_ENSURE_UFW_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure loopback traffic is configured"
  block:
      - name: "{{ SEC_ID_ENSURE_UFW_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure loopback traffic is configured | Set allow in ufw rules"
        ufw:
            rule: allow
            direction: in
            interface: lo
        notify: reload ufw

      - name: "{{ SEC_ID_ENSURE_UFW_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure loopback traffic is configured | Set allow out ufw rules"
        ufw:
            rule: allow
            direction: out
            interface: lo
        notify: reload ufw

      - name: "{{ SEC_ID_ENSURE_UFW_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv4"
        ufw:
            rule: deny
            direction: in
            from_ip: 127.0.0.0/8
        notify: reload ufw

      - name: "{{ SEC_ID_ENSURE_UFW_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure loopback traffic is configured | Set deny ufw rules IPv6"
        ufw:
            rule: deny
            direction: in
            from_ip: "::1"
        notify: reload ufw
        when: linuxcis_ipv6_required
  when:
      - SEC_ID_ENSURE_UFW_LOOPBACK_TRAFFIC_CONFIGURED not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.4
      - ufw

- name: "{{ SEC_ID_ENSURE_UFW_OUTBOUND_AND_ESTABLISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure ufw outbound connections are configured"
  block:
      - name: "{{ SEC_ID_ENSURE_UFW_OUTBOUND_AND_ESTABLISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure ufw outbound connections are configured | Custom ports"
        ufw:
            rule: allow
            direction: out
            to_port: '{{ item }}'
        with_items:
            - "{{ debiancis_ufw_allow_out_ports }}"
        notify: reload ufw
        when: debiancis_ufw_allow_out_ports != "all"

      - name: "{{ SEC_ID_ENSURE_UFW_OUTBOUND_AND_ESTABLISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure ufw outbound connections are configured | Allow all"
        ufw:
            rule: allow
            direction: out
        notify: reload ufw
        when: "'all' in debiancis_ufw_allow_out_ports"
  when:
      - SEC_ID_ENSURE_UFW_OUTBOUND_AND_ESTABLISHED_CONNECTION_CONFIGURED not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - manual
      - patch
      - rule_3.5.1.5
      - ufw

- name: "{{ SEC_ID_ENSURE_UFW_DEFAULT_RULES }} | L1 | AUDIT | Ensure ufw firewall rules exist for all open ports"
  block:
      - name: "{{ SEC_ID_ENSURE_UFW_DEFAULT_RULES }} | L1 | AUDIT | Ensure ufw firewall rules exist for all open ports | Get list of open ports"
        command: ss -4tuln
        changed_when: false
        failed_when: false
        check_mode: false
        register: debiancis_open_listen_ports_out

      - name: "{{ SEC_ID_ENSURE_UFW_DEFAULT_RULES }} | L1 | AUDIT | Ensure ufw firewall rules exist for all open ports | Get list of firewall rules"
        command: ufw status
        changed_when: false
        failed_when: false
        check_mode: false
        register: debiancis_firewall_rules_out

      - name: "{{ SEC_ID_ENSURE_UFW_DEFAULT_RULES }} | L1 | AUDIT | Ensure ufw firewall rules exist for all open ports | Message out settings"
        debug:
            msg:
                - "ALERT!!!!Below are the listening ports and firewall rules"
                - "Please create firewall rule for any open ports if not already done"
                - "*****---Open Listen Ports---*****"
                - "{{ debiancis_open_listen_ports_out.stdout_lines }}"
                - "*****---Firewall Rules---*****"
                - "{{ debiancis_firewall_rules_out.stdout_lines }}"
  when:
      - SEC_ID_ENSURE_UFW_DEFAULT_RULES not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - manual
      - audit
      - rule_3.5.1.6
      - ufw

- name: "{{ SEC_ID_ENSURE_UFW_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | PATCH | Ensure ufw default deny firewall policy"
  ufw:
      default: deny
      direction: "{{ item }}"
  notify: reload ufw
  with_items:
      - incoming
      - outgoing
      - routed
  when:
      - SEC_ID_ENSURE_UFW_DEFAULT_DENY_FIREWALL_POLICY not in disabled_cis_rules
  tags:
      - level1-server
      - level1-workstation
      - automated
      - patch
      - rule_3.5.1.7
      - ufw
