---

- name: "{{ SEC_ID_ENSURE_NFTABLES_INSTALLED }} | L1 | PATCH | Ensure nftables is installed"
  package:
      name: nftables
      state: present
  # vars:
  #     ansible_python_interpreter: /bin/python
  when:
      - SEC_ID_ENSURE_NFTABLES_INSTALLED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.1

- name: "{{ SEC_ID_ENSURE_FIREWALLD_NOT_INSTALLED_WITH_NFTABLES }} | L1 | PATCH | Ensure firewalld is either not installed or masked with nftables"
  package:
      name: firewalld
      state: absent
  when:
      - SEC_ID_ENSURE_FIREWALLD_NOT_INSTALLED_WITH_NFTABLES not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.2

- name: "{{ SEC_ID_ENSURE_IPTABLES_NOT_INSTALLED_WITH_NFTABLES }} | L1 | PATCH | Ensure iptables-services not installed with nftables"
  package:
      name: iptables-services
      state: absent
  # vars:
  #     ansible_python_interpreter: /bin/python
  when:
      - SEC_ID_ENSURE_IPTABLES_NOT_INSTALLED_WITH_NFTABLES not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.3

- name: "{{ SEC_ID_ENSURE_IPTABLES_ARE_FLUSHED_WITH_NFTABLES }} | L1 | PATCH | Ensure iptables are flushed with nftables"
  block:
      - name: "{{ SEC_ID_ENSURE_IPTABLES_ARE_FLUSHED_WITH_NFTABLES }} | L1 | PATCH | Ensure iptables are flushed with nftables| Flush IPv4 tables"
        command: iptables -F

      - name: "{{ SEC_ID_ENSURE_IPTABLES_ARE_FLUSHED_WITH_NFTABLES }} | L1 | PATCH | Ensure iptables are flushed with nftables | Flush IPv6 tables"
        command: ip6tables -F
        when:
            - linuxcis_ipv6_required
  when:
      - linuxcis_firewall != "iptables"
      - SEC_ID_ENSURE_IPTABLES_ARE_FLUSHED_WITH_NFTABLES not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.4

- name: "{{ SEC_ID_ENSURE_AN_NFTABLES_TABLE_EXISTS }} | L1 | PATCH | Ensure an nftables table exists"
  block:
      - name: "{{ SEC_ID_ENSURE_AN_NFTABLES_TABLE_EXISTS }} | L1 | AUDIT | Ensure an nftables table exists | Check for tables"
        command: nft list tables
        register: linuxcis_3_5_2_5_nft_tables

      - name: "{{ SEC_ID_ENSURE_AN_NFTABLES_TABLE_EXISTS }} | L1 | AUDIT | Ensure an nftables table exists | Show existing tables"
        debug:
            msg:
                - "Below are the current nft tables, please review"
                - "{{ linuxcis_3_5_2_5_nft_tables.stdout_lines }}"
        when:
            - linuxcis_3_5_2_5_nft_tables.stdout | length > 0

      - name: "{{ SEC_ID_ENSURE_AN_NFTABLES_TABLE_EXISTS }} | L1 | AUDIT | Ensure an nftables table exists | Alert on no tables"
        debug:
            msg:
                - "Warning! You currently have no nft tables, please review your setup"
                - 'Use the command "nft create table inet <table name>" to create a new table'
        when:
            - linuxcis_3_5_2_5_nft_tables.stdout | length == 0
            - not linuxcis_nft_tables_autoNewTable

      - name: "{{ SEC_ID_ENSURE_AN_NFTABLES_TABLE_EXISTS }} | L1 | PATCH | Ensure an nftables table exists | Create table if needed"
        command: nft create table inet "{{ linuxcis_nft_tables_tableName }}"
        failed_when: false
        when:
            - linuxcis_nft_tables_autoNewTable
  when:
      - SEC_ID_ENSURE_AN_NFTABLES_TABLE_EXISTS not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.5

- name: "{{ SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS }} | L1 | PATCH | Ensure nftables base chains exist"
  block:
      - name: "{{ SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS }} | L1 | AUDIT | Ensure nftables base chains exist | Get current chains for INPUT"
        shell: nft list ruleset | grep 'hook input'
        register: linuxcis_3_5_2_6_input_chains

      - name: "{{ SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS }} | L1 | AUDIT | Ensure nftables base chains exist | Get current chains for FORWARD"
        shell: nft list ruleset | grep 'hook forward'
        register: linuxcis_3_5_2_6_forward_chains

      - name: "{{ SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS }} | L1 | AUDIT | Ensure nftables base chains exist | Get current chains for OUTPUT"
        shell: nft list ruleset | grep 'hook output'
        register: linuxcis_3_5_2_6_output_chains

      - name: "{{ SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS }} | L1 | AUDIT | Ensure nftables base chains exist | Display chains for review"
        debug:
            msg:
                - "Below are the current INPUT chains"
                - "{{ linuxcis_3_5_2_6_input_chains.stdout_lines }}"
                - "Below are the current FORWARD chains"
                - "{{ linuxcis_3_5_2_6_forward_chains.stdout_lines }}"
                - "Below are teh current OUTPUT chains"
                - "{{ linuxcis_3_4_2_6_output_chains.stdout_lines }}"
        when:
            - not linuxcis_nft_tables_autoChainCreate

      - name: "{{ SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS }} | L1 | PATCH | Ensure nftables base chains exist | Create chains if needed"
        command: "{{ item }}"
        failed_when: false
        with_items:
            - nft create chain inet "{{ linuxcis_nft_tables_tableName }}" input { type filter hook input priority 0 \; }
            - nft create chain inet "{{ linuxcis_nft_tables_tableName }}" forward { type filter hook forward priority 0 \; }
            - nft create chain inet "{{ linuxcis_nft_tables_tableName }}" output { type filter hook output priority 0 \; }
        when:
            - linuxcis_nft_tables_autoChainCreate
  when:
      - SEC_ID_ENSURE_NFTABLES_BASE_CHAINS_EXISTS not in disabled_cis_rules
  tags:
      - skip_ansible_lint
      - level1
      - patch
      - rule_3.5.2.6

- name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure nftables loopback traffic is configured"
  block:
      - name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | AUDIT | Ensure nftables loopback traffic is configured | Gather iif lo accept existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'iif "lo" accept'
        register: linuxcis_3_5_2_7_iiflo
        changed_when: false
        failed_when: false

      - name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip saddr existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'
        register: linuxcis_3_5_2_7_ipsaddr
        changed_when: false
        failed_when: false

      - name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip6 saddr existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'
        become: true
        register: linuxcis_3_5_2_7_ip6saddr
        changed_when: false
        failed_when: false

      - name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure nftables loopback traffic is configured | Set iif lo accept rule"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input iif lo accept
        become: true
        when:
            - '"iif \"lo\" accept" not in linuxcis_3_5_2_7_iiflo.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure nftables loopback traffic is configured | Set ip sddr rule"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input ip saddr 127.0.0.0/8 counter drop
        become: true
        when:
            - '"ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop" not in linuxcis_3_5_2_7_ipsaddr.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED }} | L1 | PATCH | Ensure nftables loopback traffic is configured | Set ip6 saddr rule"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input ip6 saddr ::1 counter drop
        become: true
        when:
            - '"ip6 saddr ::1 counter packets 0 bytes 0 drop" not in linuxcis_3_5_2_7_ip6saddr.stdout'
  when:
      - SEC_ID_ENSURE_NFTABLES_LOOPBACK_TRAFFIC_CONFIGURED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.7

- name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured"
  block:
      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | AUDIT | Ensure nftables outbound and established connections are configured | Gather incoming connection rules"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
        become: true
        register: linuxcis_3_5_2_8_inconnectionrule
        changed_when: false
        failed_when: false

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | AUDIT | Ensure nftables outbound and established connections are configured | Gather outbound connection rules"
        shell: nft list ruleset | awk '/hook output/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
        become: true
        register: linuxcis_3_5_2_8_outconnectionrule
        changed_when: false
        failed_when: false

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured | Add input tcp established accpet policy"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input ip protocol tcp ct state established accept
        become: true
        when:
            - '"ip protocol tcp ct state established accept" not in linuxcis_3_5_2_8_inconnectionrule.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured | Add input udp established accpet policy"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input ip protocol udp ct state established accept
        become: true
        when:
            - '"ip protocol udp ct state established accept" not in linuxcis_3_5_2_8_inconnectionrule.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured | Add input icmp established accpet policy"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input ip protocol icmp ct state established accept
        become: true
        when:
            - '"ip protocol icmp ct state established accept" not in linuxcis_3_5_2_8_inconnectionrule.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured | Add output tcp new, related, established accpet policy"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" output ip protocol tcp ct state new,related,established accept
        become: true
        when:
            - '"ip protocol tcp ct state established,related,new accept" not in linuxcis_3_5_2_8_outconnectionrule.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured | Add output udp new, related, established accpet policy"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" output ip protocol udp ct state new,related,established accept
        become: true
        when:
            - '"ip protocol udp ct state established,related,new accept" not in linuxcis_3_5_2_8_outconnectionrule.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED }} | L1 | PATCH | Ensure nftables outbound and established connections are configured | Add output icmp new, related, established accpet policy"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" output ip protocol icmp ct state new,related,established accept
        become: true
        when:
            - '"ip protocol icmp ct state established,related,new accept" not in linuxcis_3_5_2_8_outconnectionrule.stdout'
  when:
      - SEC_ID_ENSURE_NFTABLES_OUTBOUND_AND_ESTABILISHED_CONNECTION_CONFIGURED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.8

- name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | PATCH | Ensure nftables default deny firewall policy"
  block:
      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | AUDIT | Ensure nftables default deny firewall policy | Check for hook input deny policy"
        shell: nft list table inet "{{ linuxcis_nft_tables_tableName }}" | grep 'hook input'
        become: true
        failed_when: false
        changed_when: false
        register: linuxcis_3_5_2_9_inputpolicy

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | AUDIT | Ensure nftables default deny firewall policy | Check for hook forward deny policy"
        shell: nft list table inet "{{ linuxcis_nft_tables_tableName }}" | grep 'hook forward'
        become: true
        failed_when: false
        changed_when: false
        register: linuxcis_3_5_2_9_forwardpolicy

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | AUDIT | Ensure nftables default deny firewall policy | Check for hook output deny policy"
        shell: nft list table inet "{{ linuxcis_nft_tables_tableName }}" | grep 'hook output'
        become: true
        failed_when: false
        changed_when: false
        register: linuxcis_3_5_2_9_outputpolicy

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | AUDIT | Ensure nftables default deny firewall policy | Check for SSH allow"
        shell: nft list table inet "{{ linuxcis_nft_tables_tableName }}" | grep 'ssh'
        become: true
        failed_when: false
        changed_when: false
        register: linuxcis_3_5_2_9_sshallowcheck

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | PATCH | Ensure nftables default deny firewall policy | Enable SSH traffic"
        command: nft add rule inet "{{ linuxcis_nft_tables_tableName }}" input tcp dport ssh accept
        become: true
        when:
            - '"tcp dport ssh accept" not in linuxcis_3_5_2_9_sshallowcheck.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | PATCH | Ensure nftables default deny firewall policy | Set hook input deny policy"
        command: nft chain inet "{{ linuxcis_nft_tables_tableName }}" input { policy drop \; }
        become: true
        when:
            - '"type filter hook input priority 0; policy drop;" not in linuxcis_3_5_2_9_inputpolicy.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | PATCH | EEnsure nftables default deny firewall policy | Create hook forward deny policy"
        command: nft chain inet "{{ linuxcis_nft_tables_tableName }}" forward { policy drop \; }
        become: true
        when:
            - '"type filter hook forward priority 0; policy drop;" not in linuxcis_3_5_2_9_forwardpolicy.stdout'

      - name: "{{ SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY }} | L1 | PATCH | Ensure nftables default deny firewall policy | Create hook output deny policy"
        command: nft chain inet "{{ linuxcis_nft_tables_tableName }}" output { policy drop \; }
        become: true
        when:
            - '"type filter hook output priority 0; policy drop;" not in linuxcis_3_5_2_9_outputpolicy.stdout'
  when:
      - SEC_ID_ENSURE_NFTABLES_DEFAULT_DENY_FIREWALL_POLICY not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.9

- name: "{{ SEC_ID_ENSURE_NFTABLES_SERVICE_ENABLED }} | L1 | PATCH | Ensure nftables service is enabled"
  systemd:
      name: nftables
      enabled: yes
  become: true
  when:
      - SEC_ID_ENSURE_NFTABLES_SERVICE_ENABLED not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.10

- name: "{{ SEC_ID_ENSURE_NFTABLES_RULES_PERMANENT }} | L1 | PATCH | Ensure nftables rules are permanent"
  lineinfile:
      path: /etc/sysconfig/nftables.conf
      state: present
      insertafter: EOF
      line: include "/etc/nftables/inet-{{ linuxcis_nft_tables_tableName }}"
  become: true
  when:
      - SEC_ID_ENSURE_NFTABLES_RULES_PERMANENT not in disabled_cis_rules
  tags:
      - level1
      - patch
      - rule_3.5.2.11
