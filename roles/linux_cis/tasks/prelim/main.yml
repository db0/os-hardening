---
# Preliminary tasks that should always be run
# List users in order to look files inside each home directory
- name: "PRELIM | List users accounts"
  command: "awk -F: '{print $1}' /etc/passwd"
  register: users
  changed_when: false
  check_mode: false

- name: "PRELIM | Gather accounts with empty password fields"
  shell: "cat /etc/shadow | awk -F: '($2 == \"\" ) {j++;print $1; } END {exit j}'"
  register: empty_password_accounts
  changed_when: false
  check_mode: false
  tags:
  - skip_ansible_lint

- name: "PRELIM | Gather UID 0 accounts other than root"
  shell: "cat /etc/passwd | awk -F: '($3 == 0 && $1 != \"root\") {i++;print $1 } END {exit i}'"
  register: uid_zero_accounts_except_root
  changed_when: false
  check_mode: false
  tags:
  - skip_ansible_lint

- name: "PRELIM | Check whether machine is UEFI-based"
  stat:
      path: /sys/firmware/efi
  register: linuxcis_efi_boot
  changed_when: false

- name: "PRELIM | set fact if UEFI boot | RHEL or OEL"
  set_fact:
      linuxcis_bootloader_path: "{{ UEFI_BOOTLOADER_PATH }}"
      linuxcis_legacy_boot: false
  when:
  - linuxcis_efi_boot.stat.exists

- name: "PRELIM | set if not UEFI boot"
  set_fact:
      linuxcis_bootloader_path: "{{ LEGACY_BOOTLOADER_PATH }}"
      linuxcis_legacy_boot: true
  when: not linuxcis_efi_boot.stat.exists

- name: output bootloader and efi state
  debug:
      msg:
      - "bootloader path set to {{ linuxcis_bootloader_path }}"
      - "legacy boot equals {{ linuxcis_legacy_boot }}"

- name: "PRELIM | Section {{ SEC_ID_FILESYSTEM_CONFIGURATIONS }} | Create list of mount points"
  set_fact:
      mount_names: "{{ ansible_mounts | map(attribute='mount') | list }}"

- name: "PRELIM | Section {{ SEC_ID_COMMAND_LINE_WARNING_BANNERS }} | Ensure SELinux is installed"
  package:
      name: "{{ SEC_1_7_SELINUX_PKG }}"
      state: present
  when:
  - not linuxcis_selinux_disable

- name: "PRELIM | Section {{ SEC_ID_CONFIGURE_SYSTEM_ACCOUNTING }} | Configure System Accounting (auditd)"
  package:
      name: audit
      state: present
  # vars:
  #     ansible_python_interpreter: /bin/python

- name: "PRELIM | Section {{ SEC_ID_CONFIGURE_CRON }} | Configure cron"
  package:
      name: cronie
      state: present
  # vars:
  #     ansible_python_interpreter: /bin/python
